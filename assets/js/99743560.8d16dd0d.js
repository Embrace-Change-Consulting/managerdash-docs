"use strict";(globalThis.webpackChunkmanagerdash_docs=globalThis.webpackChunkmanagerdash_docs||[]).push([[1498],{6135:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"getting-started/skills-customization","title":"Skills Assessment Setup","description":"Customize skill competencies and categories for your organization.","source":"@site/docs/1_getting-started/d_skills_customization.md","sourceDirName":"1_getting-started","slug":"/getting-started/skills-customization","permalink":"/managerdash-docs/docs/getting-started/skills-customization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1_getting-started/d_skills_customization.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"id":"skills-customization","title":"Skills Assessment Setup","description":"Customize skill competencies and categories for your organization."},"sidebar":"tutorialSidebar","previous":{"title":"Seniority Levels Setup","permalink":"/managerdash-docs/docs/getting-started/customization"},"next":{"title":"Configuring your team","permalink":"/managerdash-docs/docs/teams_and_people"}}');var t=s(4848),a=s(8453);const r={sidebar_position:4,id:"skills-customization",title:"Skills Assessment Setup",description:"Customize skill competencies and categories for your organization."},o=void 0,l={},c=[{value:"What Are Skill Competencies?",id:"what-are-skill-competencies",level:2},{value:"Why Customize Competencies?",id:"why-customize-competencies",level:3},{value:"Understanding the Default Categories",id:"understanding-the-default-categories",level:2},{value:"Output Quality",id:"output-quality",level:3},{value:"Team Contribution",id:"team-contribution",level:3},{value:"Technical Competency",id:"technical-competency",level:3},{value:"Accessing Skill Competency Configuration",id:"accessing-skill-competency-configuration",level:2},{value:"Creating Skill Competencies",id:"creating-skill-competencies",level:2},{value:"Writing Effective Descriptions",id:"writing-effective-descriptions",level:3},{value:"Editing Skill Competencies",id:"editing-skill-competencies",level:2},{value:"Deleting Skill Competencies",id:"deleting-skill-competencies",level:2},{value:"Organizing Your Competency Framework",id:"organizing-your-competency-framework",level:2},{value:"Integration with Seniority Levels",id:"integration-with-seniority-levels",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Common Patterns",id:"common-patterns",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Migration Strategies",id:"migration-strategies",level:2},{value:"Examples from Real Organizations",id:"examples-from-real-organizations",level:2},{value:"FAQ",id:"faq",level:2},{value:"Summary Checklist",id:"summary-checklist",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This guide explains how to configure and manage skill competencies in ManagerDash. You\u2019ll learn what competencies are, how the default categories work, where to set them up, and how to write effective descriptions that support fair, level-aware evaluations."}),"\n",(0,t.jsx)(n.h2,{id:"what-are-skill-competencies",children:"What Are Skill Competencies?"}),"\n",(0,t.jsx)(n.p,{children:"A skill competency is a clearly defined capability you evaluate during a skills assessment. Competencies create a consistent lens for tracking technical ability, collaboration, and professional growth. Examples include Code Review Quality, System Design, Communication, Mentorship, Problem Solving, and Documentation."}),"\n",(0,t.jsx)(n.p,{children:"Every team brings its own context\u2014tech stacks, collaboration patterns, role expectations, company values, and career frameworks. ManagerDash is designed to adapt to that context so you evaluate what really matters."}),"\n",(0,t.jsx)(n.h3,{id:"why-customize-competencies",children:"Why Customize Competencies?"}),"\n",(0,t.jsx)(n.p,{children:"Customization helps you assess the skills that drive outcomes on your team, align assessments with company values and role expectations, and skip generic items that don\u2019t apply. With shared definitions, everyone is evaluated against the same criteria, expectations are clearer, comparisons are fairer, and promotion decisions become more consistent and less biased. Custom competencies also make career development more tangible: you can track growth, plan targeted improvements, tie skills to promotion requirements, and celebrate meaningful achievements. Finally, a tailored framework keeps individual growth aligned to team and organizational goals."}),"\n",(0,t.jsx)(n.h2,{id:"understanding-the-default-categories",children:"Understanding the Default Categories"}),"\n",(0,t.jsxs)(n.p,{children:["ManagerDash ships with three categories\u2014but ",(0,t.jsx)(n.strong,{children:"no pre-defined competencies"}),"\u2014so you can define what\u2019s right for your organization."]}),"\n",(0,t.jsx)(n.h3,{id:"output-quality",children:"Output Quality"}),"\n",(0,t.jsx)(n.p,{children:"Work quality and impact: code maintainability, architectural decisions, testing thoroughness, documentation completeness, and attention to detail."}),"\n",(0,t.jsx)(n.h3,{id:"team-contribution",children:"Team Contribution"}),"\n",(0,t.jsx)(n.p,{children:"Collaboration and team dynamics: effective communication, mentoring and coaching, knowledge sharing, cross-team collaboration, and supportive behaviors."}),"\n",(0,t.jsx)(n.h3,{id:"technical-competency",children:"Technical Competency"}),"\n",(0,t.jsx)(n.p,{children:"Core technical expertise: system design, problem solving, technology depth, architecture knowledge, and the breadth required for your stack."}),"\n",(0,t.jsxs)(n.p,{children:["These three categories keep assessments balanced: ",(0,t.jsx)(n.strong,{children:"what"})," someone produces (Output), ",(0,t.jsx)(n.strong,{children:"how"})," they work with others (Team), and ",(0,t.jsx)(n.strong,{children:"what"})," they know (Technical). The framework is simple, memorable, and flexible across most engineering teams. You\u2019ll customize it by adding specific competencies within each category."]}),"\n",(0,t.jsx)(n.h2,{id:"accessing-skill-competency-configuration",children:"Accessing Skill Competency Configuration"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.strong,{children:"ManagerDash"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["In the left sidebar, select the ",(0,t.jsx)(n.strong,{children:"Settings"})," (gear) button at the bottom."]}),"\n",(0,t.jsxs)(n.li,{children:["Choose ",(0,t.jsx)(n.strong,{children:"Manage Teams"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"Manage Teams"})," modal, open the ",(0,t.jsx)(n.strong,{children:"Skill Categories"})," tab.\nYou\u2019ll see your competencies grouped by category."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"creating-skill-competencies",children:"Creating Skill Competencies"}),"\n",(0,t.jsxs)(n.p,{children:["Select ",(0,t.jsx)(n.strong,{children:"+ Add Competency"})," to open the creation form, then complete the fields:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Name"})," (required): keep it short (3\u20136 words), specific, and actionable. This title appears in assessments (e.g., \u201cCode Review Quality,\u201d \u201cSystem Design,\u201d \u201cMentorship\u201d)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Category"})," (required): pick ",(0,t.jsx)(n.strong,{children:"Output Quality"}),", ",(0,t.jsx)(n.strong,{children:"Team Contribution"}),", or ",(0,t.jsx)(n.strong,{children:"Technical Competency"}),". The category organizes competencies and affects radar-chart grouping."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description"})," (required): define the skill in concrete terms. Describe what proficiency looks like, which behaviors demonstrate it, and how expectations vary by seniority. Clear descriptions improve consistency across reviewers."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.strong,{children:"Save"}),". The competency appears under its category and becomes available in skills assessments within a couple of seconds."]}),"\n",(0,t.jsx)(n.h3,{id:"writing-effective-descriptions",children:"Writing Effective Descriptions"}),"\n",(0,t.jsx)(n.p,{children:"Good descriptions provide a clear definition, observable behaviors, level-specific expectations, concrete examples, and simple guidance on how to rate."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example: Code Review Quality"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"The ability to provide thorough, constructive code reviews that improve \ncode quality and help teammates grow.\n\nObservable behaviors:\n- Catches bugs and potential issues\n- Suggests better approaches and patterns\n- Explains reasoning clearly\n- Balances thoroughness with timeliness\n- Helps others learn through feedback\n\nExpectations by level:\n- Early career: Reviews straightforward PRs, asks clarifying questions\n- Mid: Provides detailed feedback, catches most issues\n- Senior: Mentors through reviews, catches subtle issues, influences team standards\n"})}),"\n",(0,t.jsx)(n.h2,{id:"editing-skill-competencies",children:"Editing Skill Competencies"}),"\n",(0,t.jsx)(n.p,{children:"Edit competencies to clarify descriptions, add examples, update expectations, or fix typos as your understanding evolves."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Go to ",(0,t.jsx)(n.strong,{children:"Settings \u2192 Manage Teams \u2192 Skill Categories"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Locate the competency and select the ",(0,t.jsx)(n.strong,{children:"Edit"})," (pencil) icon."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Update the ",(0,t.jsx)(n.strong,{children:"Name"}),", ",(0,t.jsx)(n.strong,{children:"Category"}),", or ",(0,t.jsx)(n.strong,{children:"Description"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Renaming updates all assessments and charts immediately (no data loss), but consider the impact on historical reports."}),"\n",(0,t.jsx)(n.li,{children:"Recategorizing changes grouping in the UI and radar charts without affecting ratings."}),"\n",(0,t.jsx)(n.li,{children:"Updating descriptions is safe and improves consistency."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.strong,{children:"Save"}),"; changes take effect immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"deleting-skill-competencies",children:"Deleting Skill Competencies"}),"\n",(0,t.jsxs)(n.p,{children:["Delete a competency only when it\u2019s no longer relevant, you\u2019re consolidating overlaps, or correcting mistakes. Deletion ",(0,t.jsx)(n.strong,{children:"removes all historic ratings and notes for that competency"})," across all team members and ",(0,t.jsx)(n.strong,{children:"cannot be undone"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["To delete, open ",(0,t.jsx)(n.strong,{children:"Settings \u2192 Manage Teams \u2192 Skill Categories"}),", choose the competency, click ",(0,t.jsx)(n.strong,{children:"Delete"})," (trash), review the confirmation details, and confirm. Consider exporting current reports first if you want to preserve history, and communicate the change to your team."]}),"\n",(0,t.jsx)(n.h2,{id:"organizing-your-competency-framework",children:"Organizing Your Competency Framework"}),"\n",(0,t.jsxs)(n.p,{children:["Most teams succeed with ",(0,t.jsx)(n.strong,{children:"8\u201312 total"})," competencies. Fewer than six often lacks detail; more than fifteen becomes noisy and time-consuming. Distribute across categories to fit your context:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Balanced"}),": 3\u20134 per category (9\u201312 total)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Technical-heavy"}),": 4\u20136 technical, 2\u20133 each for output and team (8\u201312 total)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Collaboration-focused"}),": 4\u20135 team, 3\u20134 output, 2\u20133 technical (9\u201312 total)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Start with the essentials that drive team success and align with promotion criteria and company values. Add role-specific competencies for unique technologies or processes. Pilot with 6\u20138 for a quarter, then refine: add where you see gaps and merge or remove overlaps."}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-seniority-levels",children:"Integration with Seniority Levels"}),"\n",(0,t.jsxs)(n.p,{children:["Write descriptions with ",(0,t.jsx)(n.strong,{children:"level-aware expectations"})," so a \u201c2 \u2013 On track\u201d means \u201cmeeting expectations for this level,\u201d regardless of seniority. A shared rating scale remains fair across levels while recognizing that a Senior\u2019s \u201cOutperform\u201d looks different from a Junior\u2019s."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example: System Design"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Description: Designs scalable, maintainable systems with appropriate \narchitecture patterns.\n\nExpectations by Level:\n- Early career (JR): Implements designs from others; asks clarifying questions.\n- Engineer (ENG): Independently designs medium-complexity features; weighs trade-offs.\n- Senior (SR): Designs complex systems; influences team standards; mentors others.\n- Staff (STF): Guides multi-team architecture; makes strategic decisions; sets direction.\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Initial setup."})," Start simple with 6\u20138 unambiguous competencies and strong descriptions. Share with peer managers for calibration, pilot with a few assessments, and iterate. Document your framework externally, including rating philosophy and level examples."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ongoing management."})," Review relevance quarterly, refresh descriptions semi-annually, and perform a deeper annual review. Calibrate regularly with other managers by discussing example ratings and challenging cases. Seek feedback from your team about clarity and coverage, and evolve the framework as your org changes."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Writing guidance."})," Be concrete and behavioral, include level expectations, and keep descriptions readable (ideally under ~200 words). Avoid vague, subjective, or personality-based language and unnecessary jargon."]}),"\n",(0,t.jsx)(n.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Small teams (3\u20135):"})," Favor generalist skills, emphasize collaboration, and keep the framework light (6\u20138 items)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Medium teams (6\u201315):"})," Expand to 8\u201312 with some specialization and role-specific competencies."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Large teams (15+):"})," Support sub-specialties, formal promotion criteria, and a standardized framework (10\u201315)."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Team maturity also matters. New teams benefit from a simple, output-and-collaboration-focused start; established teams can maintain a comprehensive, well-documented framework; high-performing teams often add strategic and leadership-oriented competencies."}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Can\u2019t find the Skill Categories tab."}),"\nOpen ",(0,t.jsx)(n.strong,{children:"Settings \u2192 Manage Teams"})," and look for the tab at the top of the modal. It may be labeled \u201cSkill Categories\u201d or \u201cCompetencies.\u201d If it\u2019s missing, verify the app version and that the modal has fully loaded."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Changes aren\u2019t appearing in assessments."}),"\nAllow a couple of seconds for auto-refresh, then try refreshing the app. Confirm your save succeeded and check for error messages. Closing and reopening the modal can help."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Assessments are empty."}),"\nCreate at least one competency in ",(0,t.jsx)(n.strong,{children:"Settings \u2192 Manage Teams \u2192 Skill Categories"}),". Assessments include all defined competencies automatically."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Deleted an item by mistake."}),"\nDeletions can\u2019t be undone. Recreate the competency with the same name/description; it will reappear in assessments, but historical ratings are lost. Re-evaluate as needed."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Too many competencies."}),"\nConsolidate overlaps and remove low-value items. Aim back toward the 8\u201312 range and prioritize clarity over completeness."]}),"\n",(0,t.jsx)(n.h2,{id:"migration-strategies",children:"Migration Strategies"}),"\n",(0,t.jsx)(n.p,{children:"If you\u2019re starting from scratch, spend a week drafting a candidate list (10\u201315), writing descriptions, and getting feedback. In week two, implement 6\u20138 core items in ManagerDash, test, refine, and then add the rest. Roll out over weeks three and four with documentation, initial ratings, and feedback sessions. In month two, adjust based on usage, add missing items, merge or remove overlaps, and set a regular review cadence."}),"\n",(0,t.jsx)(n.p,{children:"If you\u2019re replacing a generic framework, document the current state (export assessments), design the new model (what to keep, modify, delete, add), communicate the why and the plan, implement gradually (add new first, remove old last), and re-baseline rather than mapping old ratings to new competencies."}),"\n",(0,t.jsx)(n.h2,{id:"examples-from-real-organizations",children:"Examples from Real Organizations"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Tech Startup (Early Stage) \u2014 8 competencies"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Output Quality:\n- Feature Delivery Speed\n- Code Quality\n- Product Thinking\n\nTeam Contribution:\n- Communication\n- Collaboration\n- Ownership\n\nTechnical Competency:\n- Full-Stack Ability\n- Problem Solving\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Mid-Size SaaS \u2014 12 competencies"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Output Quality:\n- Code Maintainability\n- Testing & Quality\n- Architecture Decisions\n- Documentation\n\nTeam Contribution:\n- Code Review Quality\n- Mentorship\n- Cross-Team Collaboration\n\nTechnical Competency:\n- Backend Systems\n- Frontend Development\n- Database Design\n- DevOps & Infrastructure\n- Security Awareness\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Enterprise \u2014 15 competencies"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Output Quality:\n- Solution Design\n- Implementation Quality\n- Performance & Scalability\n- Security Compliance\n\nTeam Contribution:\n- Technical Leadership\n- Mentoring & Coaching\n- Stakeholder Management\n- Documentation & Knowledge Sharing\n\nTechnical Competency:\n- System Architecture\n- Cloud Technologies\n- Data Engineering\n- API Design\n- Technology Strategy\n- Platform Engineering\n- DevOps Practices\n"})}),"\n",(0,t.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"How many competencies should I start with?"}),"\nBegin with 6\u20138 core items. Add more later as needed."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Should competencies differ by role (frontend vs backend)?"}),"\nOften a unified framework works best, with a handful of role-specific items where necessary."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Can I change competencies after creating assessments?"}),"\nYes. Changes are immediate. Be cautious with deletions because they remove historic ratings."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What if a competency is poorly defined?"}),"\nImprove the description. Iteration is expected."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Should descriptions include level expectations?"}),"\nHighly recommended for consistency and fairness."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"How often should I update the framework?"}),"\nReview quarterly and change only when needed to avoid churn."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Can I use different categories?"}),"\nThe three categories are fixed, but what you place inside them is flexible."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What if team members disagree with the framework?"}),"\nInvolve them in design and review. Pilot, gather feedback, and iterate."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Should I share competency descriptions with the team?"}),"\nYes. Transparency improves self-development and review quality."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"How do competencies differ from seniority levels?"}),"\nLevels define roles (e.g., Early Career, Senior). Competencies define the skills you evaluate at those levels."]}),"\n",(0,t.jsx)(n.h2,{id:"summary-checklist",children:"Summary Checklist"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Select 6\u20138 initial competencies and assign categories"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Write clear names and level-aware descriptions with examples"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create competencies in ",(0,t.jsx)(n.strong,{children:"Settings \u2192 Manage Teams \u2192 Skill Categories"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Pilot an assessment, verify usefulness, and refine"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Document the framework and align with peer managers"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Roll out to the team and set a review cadence"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"After setup:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create assessments for each person on the ",(0,t.jsx)(n.strong,{children:"Skills"})," tab."]}),"\n",(0,t.jsx)(n.li,{children:"Rate each competency (0\u20134), add notes with concrete examples, and review together in 1:1s."}),"\n",(0,t.jsx)(n.li,{children:"Link low-rated competencies to development goals and reassess quarterly to track growth."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"/managerdash-docs/docs/assessing-skills",children:"Skills Assessment Guide"})," for detailed usage."]}),"\n",(0,t.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Inspiration"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Your company\u2019s competency models"}),"\n",(0,t.jsx)(n.li,{children:"Peer manager frameworks"}),"\n",(0,t.jsx)(n.li,{children:"Industry career ladders and open-source models (e.g., progression.fyi)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Related Docs"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/managerdash-docs/docs/assessing-skills",children:"Skills Assessment Guide"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/managerdash-docs/docs/getting-started/customization",children:"Seniority Levels Setup"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/managerdash-docs/docs/goals-and-milestones",children:"Goals & Milestones"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);